{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoService","constructor","_http","obtemNegociacoesDaSemana","get","then","dados","negociacoes","map","objeto","Date","data","quantidade","valor","err","Error","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","Promise","all","periodo","reduce","novoArray","item","concat","sort","a","b","getTime","catch","console","log"],"mappings":";;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;;AAEF,kBAAMC,iBAAN,CAAwB;;AAE3BC,8BAAc;AACV,yBAAKC,KAAL,GAAa,IAAIJ,WAAJ,EAAb;AACH;;AAEDK,2CAA2B;;AAEvB,2BAAO,KAAKD,KAAL,CAAWE,GAAX,CAAe,oBAAf,EAAqCC,IAArC,CAEHC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEA,+BAAON,WAAP;AACH,qBANE,EAQHO,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACH,qBAVE,CAAP;AAaH;;AAEDC,mDAAmC;;AAE/B,2BAAO,KAAKd,KAAL,CAAWE,GAAX,CAAe,sBAAf,EAAuCC,IAAvC,CAEHC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEA,+BAAON,WAAP;AACH,qBANE,EAQHO,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,0DAAV,CAAN;AACH,qBAVE,CAAP;AAaH;;AAEDE,oDAAoC;AAChC,2BAAO,KAAKf,KAAL,CAAWE,GAAX,CAAe,uBAAf,EAAwCC,IAAxC,CAEHC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEA,+BAAON,WAAP;AACH,qBANE,EAQHO,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;AACH,qBAVE,CAAP;AAYH;;AAEDG,4CAA4B;;AAExB,2BAAOC,QAAQC,GAAR,CAAY,CACf,KAAKjB,wBAAL,EADe,EAEf,KAAKa,gCAAL,EAFe,EAGf,KAAKC,iCAAL,EAHe,CAAZ;;AAMH;AACA;AACA;AACA;;AATG,qBAWFZ,IAXE,CAWGgB,WAAWA,QACZC,MADY,CACL,CAACC,SAAD,EAAYC,IAAZ,KAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CADhB,EACwC,EADxC,EAEZE,IAFY,CAEP,CAACC,CAAD,EAAIC,CAAJ,KAAUA,EAAEjB,IAAF,CAAOkB,OAAP,KAAmBF,EAAEhB,IAAF,CAAOkB,OAAP,EAFtB,CAXd,EAgBFC,KAhBE,CAgBIhB,OAAO;AACViB,gCAAQC,GAAR,CAAYlB,GAAZ;AACA,8BAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACH,qBAnBE,CAAP;AAoBH;AA7E0B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from './Negociacao.js';\n\nexport class NegociacaoService {\n\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    obtemNegociacoesDaSemana() {\n\n        return this._http.get('negociacoes/semana').then(\n\n            dados => {\n                const negociacoes = dados.map(objeto =>\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n                return negociacoes;\n            },\n\n            err => {\n                throw new Error('Não foi possível obter as negociações');\n            }\n        );\n\n    }\n\n    obtemNegociacoesDaSemanaAnterior() {\n\n        return this._http.get('negociacoes/anterior').then(\n\n            dados => {\n                const negociacoes = dados.map(objeto =>\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n                return negociacoes;\n            },\n\n            err => {\n                throw new Error('Não foi possível obter as negociações da semana anterior');\n            }\n        );\n\n    }\n\n    obtemNegociacoesDaSemanaRetrasada() {\n        return this._http.get('negociacoes/retrasada').then(\n\n            dados => {\n                const negociacoes = dados.map(objeto =>\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n                return negociacoes;\n            },\n\n            err => {\n                throw new Error('Não\tfoi\tpossível\tobter\tas\tnegociações\tda\tsemana\tretrasada');\n            }\n        );\n    }\n\n    obtemNegociacoesDoPeriodo() {\n\n        return Promise.all([\n            this.obtemNegociacoesDaSemana(),\n            this.obtemNegociacoesDaSemanaAnterior(),\n            this.obtemNegociacoesDaSemanaRetrasada()\n        ])\n\n            // .then(periodo => {\n            //     return periodo .reduce((novoArray, item) => novoArray.concat(item),[])\n            //     .sort((a, b) => b.data.getTime() - a.data.getTime());\n            // })\n\n            .then(periodo => periodo\n                .reduce((novoArray, item) => novoArray.concat(item), [])\n                .sort((a, b) => b.data.getTime() - a.data.getTime())\n            )\n\n            .catch(err => {\n                console.log(err);\n                throw new Error('Não foi possível obter as negociações do período')\n            });\n    }\n}"]}