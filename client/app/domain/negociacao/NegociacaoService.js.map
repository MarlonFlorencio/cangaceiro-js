{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obtemNegociacoesDaSemana","get","then","dados","negociacoes","map","objeto","Date","data","quantidade","valor","err","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;AACAC,gC,+BAAAA,oB;;;AAEF,kBAAMC,iBAAN,CAAwB;;AAE3BC,8BAAc;AACV,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;;AAEDM,2CAA2B;;AAEvB,2BAAO,KAAKD,KAAL,CAAWE,GAAX,CAAe,oBAAf,EAAqCC,IAArC,CAEHC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEA,+BAAON,WAAP;AACH,qBANE,EAQHO,OAAO;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,uCAAzB,CAAN;AACH,qBAVE,CAAP;AAaH;;AAEDgB,mDAAmC;;AAE/B,2BAAO,KAAKb,KAAL,CAAWE,GAAX,CAAe,sBAAf,EAAuCC,IAAvC,CAEHC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEA,+BAAON,WAAP;AACH,qBANE,EAQHO,OAAO;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,0DAAzB,CAAN;AACH,qBAVE,CAAP;AAaH;;AAEDiB,oDAAoC;AAChC,2BAAO,KAAKd,KAAL,CAAWE,GAAX,CAAe,uBAAf,EAAwCC,IAAxC,CAEHC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEA,+BAAON,WAAP;AACH,qBANE,EAQHO,OAAO;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,2DAAzB,CAAN;AACH,qBAVE,CAAP;AAYH;;AAED;;;;;;;;;;;;;;;;;;;;;;AA0BMkB,yCAAN,GAAkC;AAAA;;AAAA;AAC9B,4BAAI;AACA,gCAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,MAAKjB,wBAAL,EAD4B,EAE5B,MAAKY,gCAAL,EAF4B,EAG5B,MAAKC,iCAAL,EAH4B,CAAZ,CAApB;AAKA,mCAAOE,QACFG,MADE,CACK,UAACC,SAAD,EAAYC,IAAZ;AAAA,uCAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,6BADL,EACkD,EADlD,EAEFE,IAFE,CAEG,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUA,EAAEhB,IAAF,CAAOiB,OAAP,KAAmBF,EAAEf,IAAF,CAAOiB,OAAP,EAA7B;AAAA,6BAFH,CAAP;AAGH,yBATD,CASE,OAAOd,GAAP,EAAY;AACVe,oCAAQC,GAAR,CAAYhB,GAAZ;AACA,kCAAM,IAAIf,oBAAJ,CAAyB,kDAAzB,CAAN;AACH;AAb6B;AAcjC;AA/F0B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from './Negociacao.js';\nimport { ApplicationException } from '../../util/ApplicationException.js';\n\nexport class NegociacaoService {\n\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    obtemNegociacoesDaSemana() {\n\n        return this._http.get('negociacoes/semana').then(\n\n            dados => {\n                const negociacoes = dados.map(objeto =>\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n                return negociacoes;\n            },\n\n            err => {\n                throw new ApplicationException('Não foi possível obter as negociações');\n            }\n        );\n\n    }\n\n    obtemNegociacoesDaSemanaAnterior() {\n\n        return this._http.get('negociacoes/anterior').then(\n\n            dados => {\n                const negociacoes = dados.map(objeto =>\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n                return negociacoes;\n            },\n\n            err => {\n                throw new ApplicationException('Não foi possível obter as negociações da semana anterior');\n            }\n        );\n\n    }\n\n    obtemNegociacoesDaSemanaRetrasada() {\n        return this._http.get('negociacoes/retrasada').then(\n\n            dados => {\n                const negociacoes = dados.map(objeto =>\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n                return negociacoes;\n            },\n\n            err => {\n                throw new ApplicationException('Não foi possível obter as negociações da semana retrasada');\n            }\n        );\n    }\n\n    /*\n    obtemNegociacoesDoPeriodo() {\n\n        return Promise.all([\n            this.obtemNegociacoesDaSemana(),\n            this.obtemNegociacoesDaSemanaAnterior(),\n            this.obtemNegociacoesDaSemanaRetrasada()\n        ])\n\n            // .then(periodo => {\n            //     return periodo .reduce((novoArray, item) => novoArray.concat(item),[])\n            //     .sort((a, b) => b.data.getTime() - a.data.getTime());\n            // })\n\n            .then(periodo => periodo\n                .reduce((novoArray, item) => novoArray.concat(item), [])\n                .sort((a, b) => b.data.getTime() - a.data.getTime())\n            )\n\n            .catch(err => {\n                console.log(err);\n                throw new Error('Não foi possível obter as negociações do período')\n            });\n    }\n    */\n\n    async obtemNegociacoesDoPeriodo() {\n        try {\n            let periodo = await Promise.all([\n                this.obtemNegociacoesDaSemana(),\n                this.obtemNegociacoesDaSemanaAnterior(),\n                this.obtemNegociacoesDaSemanaRetrasada()\n            ]);\n            return periodo\n                .reduce((novoArray, item) => novoArray.concat(item), [])\n                .sort((a, b) => b.data.getTime() - a.data.getTime());\n        } catch (err) {\n            console.log(err);\n            throw new ApplicationException('Não foi possível obter as negociações do período');\n        };\n    }\n}"]}