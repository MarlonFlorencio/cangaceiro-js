{"version":3,"sources":["../../app-src/util/HttpService.js"],"names":["HttpService","_handleErrors","res","ok","Error","statusText","get","url","fetch","then","json"],"mappings":";;;;;;gBAAaA,W,GAAN,MAAMA,WAAN,CAAkB;;AAErBC,8BAAcC,GAAd,EAAmB;AACf;AACA,wBAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,2BAAOH,GAAP;AACH;;AAEDI,oBAAIC,GAAJ,EAAS;AACL,2BAAOC,MAAMD,GAAN,EACFE,IADE,CACGP,OAAO,KAAKD,aAAL,CAAmBC,GAAnB,CADV,EAEFO,IAFE,CAEGP,OAAOA,IAAIQ,IAAJ,EAFV,CAAP;AAGH;;AAED;;;;;;;;;;;;;;;;;;;;;;AAdqB,a","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    _handleErrors(res) {\n        //\tse\tnão\testiver\tok,\tlança\ta\texceção\n        if (!res.ok) throw new Error(res.statusText);\n        return res;\n    }\n\n    get(url) {\n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n    }\n\n    /*\n    get(url) {\n        return new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.open('GET', url);\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState == 4) {\n                    if (xhr.status == 200) {\n                        //\tPASSOU\tO\tRESULTADO\tPARA\tRESOLVE\n                        //\tJÁ\tPARSEADO!\n                        resolve(JSON.parse(xhr.responseText));\n                    } else {\n                        console.log(xhr.responseText);\n                        //\tPASSOU\tO\tERRO\tPARA\tREJECT\n                        reject(xhr.responseText);\n                    }\n                }\n            };\n            xhr.send();\n        });\n    }\n    */\n}"]}